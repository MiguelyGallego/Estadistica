---
format: html
editor: visual
---

```{r}
library(ggplot2)
```

Cargar los datos en un dataframe llamado: airbnb

```{r}
airbnb<-read.csv('data//airbnb.csv',sep = ',', stringsAsFactors = F)
```

Mostrar las primeras 6 filas del dataframe

```{r}
airbnb[1:6,]
```

Renombrar las columnas de la siguiente forma:

| Nombre original        | Nuevo nombre   |
|------------------------|----------------|
| Zipcode                | CodigoPostal   |
| Neighbourhood.Cleansed | Barrio         |
| Property.Type          | TipoPropiedad  |
| Room.Type              | TipoAlquiler   |
| Accommodates           | MaxOcupantes   |
| Bathrooms              | NumBanyos      |
| Bedrooms               | NumDormitorios |
| Beds                   | NumCamas       |
| Bed.Type               | TipoCama       |
| Amenities              | Comodidades    |
| Square.Feet            | PiesCuadrados  |
| Price                  | Precio         |
| Review.Scores.Rating   | Puntuacion     |

```{r}
newnames<-c("CodigoPostal","Barrio","TipoPropiedad","TipoAlquiler","MaxOcupantes","NumBanyos",
"NumDormitorios","NumCamas","TipoCama","Comodidades","PiesCuadrados","Precio","Puntuacion")
```

```{r}
colnames(airbnb)<-c("CodigoPostal","Barrio","TipoPropiedad","TipoAlquiler","MaxOcupantes","NumBanyos",
"NumDormitorios","NumCamas","TipoCama","Comodidades","PiesCuadrados","Precio","Puntuacion")
```

```{r}
colnames(airbnb)
```

Crea una nueva columna llamada MetrosCuadrados a partir de la columna PiesCuadrados.

Ayuda: 1 pie cuadrado son 0,092903 metros cuadrdados

```{r}
airbnb$MetrosCuadrados <- round(airbnb$PiesCuadrados * 0.092903, 2)
str(airbnb)
head(airbnb$PiesCuadrados)
head(airbnb$MetrosCuadrados)
```

Miremos el código postal. Es una variable con entradas erroneas. Hay valores como '','-' y '28' que deberían ser considerados como NA. Así mismo también debería ser NA todos los que no compiencen por 28, ya que estamos con códigos postales de Madrid

```{r}
length(airbnb$CodigoPostal[is.na(airbnb$CodigoPostal)])
# airbnb$CodigoPostal <- as.character(airbnb$CodigoPostal)
str(airbnb$CodigoPostal)
airbnb$CodigoPostal <- ifelse(!startsWith(airbnb$CodigoPostal, "28"), NA, airbnb$CodigoPostal)
airbnb$CodigoPostal <- ifelse(airbnb$CodigoPostal=="28", NA, airbnb$CodigoPostal)

```

El código postal 28002, 28004 y 28051 tienen entradas repetidas. Por ejemplo las entradas 28002\n20882 deberían ir dnetro de 28002

```{r}
airbnb$CodigoPostal <- ifelse(grepl("28002", airbnb$CodigoPostal), "28002", airbnb$CodigoPostal)
airbnb$CodigoPostal <- ifelse(grepl("28004", airbnb$CodigoPostal), "28004", airbnb$CodigoPostal)
airbnb$CodigoPostal <- ifelse(grepl("28051", airbnb$CodigoPostal), "28051", airbnb$CodigoPostal)

# airbnb$CodigoPostal[grepl("28002", airbnb$CodigoPostal)]
# airbnb$CodigoPostal[grepl("28004", airbnb$CodigoPostal)]
# airbnb$CodigoPostal[grepl("28051", airbnb$CodigoPostal)]
```

El codigo 2804 debería ser 28004, 2805 deberia ser 28005 y 2815 juncto con 2815 debería ser 28015

```{r}
# subset(airbnb, nchar(CodigoPostal)<5)$CodigoPostal

airbnb$CodigoPostal[airbnb$CodigoPostal=="2804"] <- "28004"
airbnb$CodigoPostal[airbnb$CodigoPostal=="2805"] <- "28005"
airbnb$CodigoPostal[airbnb$CodigoPostal=="2815"] <- "28015"

# subset(airbnb, nchar(CodigoPostal)>5)$CodigoPostal

airbnb$CodigoPostal[airbnb$CodigoPostal=="280013"] <- "28013"
```

Limpia los datos de la columna Codigo Postal

Una vez limpios los datos ¿Cuales son los códigos postales que tenemos?

```{r}
table(airbnb$CodigoPostal)
unique(airbnb$CodigoPostal)
```

¿Cuales son los 5 códigos postales con más entradas? ¿Y con menos? ¿Cuantas entradas tienen?

```{r}
cp_mas_entradas <- head(sort(table(airbnb$CodigoPostal), decreasing = TRUE))
cp_menos_entradas <- head(sort(table(airbnb$CodigoPostal)))

cp_mas_entradas
cp_menos_entradas
```

¿Cuales son los barrios que hay en el código postal 28012?

```{r}
unique(subset(airbnb, CodigoPostal == "28012")$Barrio)
```

¿Cuantas entradas hay en cada uno de esos barrios para el codigo postal 28012?

```{r}
table(subset(airbnb, CodigoPostal == "28012")$Barrio)
```

¿Cuantos barrios hay en todo el dataset airbnb? ¿Cuales son?

```{r}
length(unique(airbnb$Barrio))
unique(airbnb$Barrio)
```

¿Cuales son los 5 barrios que tienen mayor número entradas?

```{r}
head(sort(table(airbnb$Barrio), decreasing = TRUE))
```

¿Cuantos Tipos de Alquiler diferentes hay? ¿Cuales son? ¿Cuantas entradas en el dataframe hay por cada tipo?

```{r}
length(unique(airbnb$TipoAlquiler))
unique(airbnb$TipoAlquiler)
table(airbnb$TipoAlquiler)
```

Muestra el diagrama de cajas del precio para cada uno de los diferentes Tipos de Alquiler

```{r}
ggplot(data = airbnb, aes(x=TipoAlquiler, y=Precio))+geom_boxplot()
```

Cual es el precio medio de alquiler de cada uno, la diferencia que hay ¿es estadísticamente significativa? ¿Con que test lo comprobarías?

```{r}
aggregate(Precio ~ TipoAlquiler, airbnb, mean)
# str(airbnb)
airbnb$TipoAlquiler <- as.factor(airbnb$TipoAlquiler)

for (i in levels(airbnb$TipoAlquiler)){
  print(paste("Tipo de alquiler:",i,"p-value,",
              shapiro.test(sample(airbnb$Precio[airbnb$TipoAlquiler==i], 5000, replace = TRUE))$p.value))
}

# Los valores del p-valor al aplicar el test Shapiro son muy bajos, lo que nos indican que no siguen una distribución gaussiana. Por éste motivo vamos a utilizar el Kruskal test.
```

```{r}
# Utilizamos el Kruskal test y el p-valor que da de resultado es muy bajo,la prueba sugiere que hay una diferencia significativa en los precios medios entre los tres grupos de tipos de alquiler.
ktest <- kruskal.test(Precio~TipoAlquiler, data = airbnb)
ktest
```

Filtra el dataframe cuyos tipo de alquiler sea 'Entire home/apt' y guardalo en un dataframe llamado *airbnb_entire*. Estas serán las entradas que tienen un alquiler del piso completo.

```{r}
airbnb_entire <- subset(airbnb, TipoAlquiler=='Entire home/apt')

str(airbnb_entire)
```

¿Cuales son los 5 barrios que tienen un mayor número de apartamentos enteros en alquiler? Nota: Mirar solo en airbnb_entire. A partir de este punto y hasta que se diga lo contrario partiremos de airbnb_entire.

```{r}
barrios_top_apartamentos <- head(sort(table(airbnb_entire$Barrio), decreasing = TRUE))
barrios_top_apartamentos
```

¿Cuales son los 5 barrios que tienen un mayor precio medio de alquiler para apartamentos enteros (es decir, del dataframe airbnb_entire)?

```{r}
library(tidyverse)

barrios_top_precio <- airbnb_entire |> group_by(Barrio) |> summarize(precio_medio = mean(Precio)) |> arrange(desc(precio_medio)) |> head(5)
barrios_top_precio
```

¿Cual es su precio medio?

Ayuda: Usa la función aggregate `aggregate(.~colname,df,mean,na.rm=TRUE)`

```{r}
# precio_medio_top_Barrios <- mean(barrios_top_precio$precio_medio)
# precio_medio_top_Barrios


mean(head(sort(aggregate(Precio~Barrio, airbnb_entire, mean, na.rm=TRUE)$Precio, decreasing = TRUE)))
aggregate(Precio~Barrio, airbnb_entire, mean, na.rm=TRUE)

```

¿Cuantos apartamentos hay en cada uno de esos barrios?

Mostrar una dataframe con el nombre del barrio, el precio y el número de entradas.

Ayuda: Podeis crear un nuevo dataframe con las columnas "Barrio" y "Freq" que contenga el número de entradas en cada barrio y hacer un merge con el dataframe del punto anterior.

```{r}
airbnb_entire_freq <- airbnb_entire |>
  group_by(Barrio) |>
  summarise(`Freq` = n())

airbnb_barr_freq <- merge(airbnb_entire_freq, aggregate(Precio~Barrio, airbnb_entire, mean, na.rm=TRUE))
airbnb_barr_freq
```

Partiendo del dataframe anterior, muestra los 5 barrios con mayor precio, pero que tengan más de 100 entradas de alquiler.

```{r}
barrio_100 <- airbnb_barr_freq |> filter(Freq > 100) |>
  arrange(desc(Precio)) |>
  head(5)

barrio_100
```

Dibuja el diagrama de densidad de distribución de los diferentes precios. Serían 5 gráficas, una por cada barrio.

```{r}
barrios <- c("Recoletos", "Goya", "Sol", "Trafalgar", "Justicia")
barrios_interes <- airbnb_entire |> filter(Barrio %in% barrios)

ggplot(barrios_interes, aes(x=Precio, color=Barrio)) +
  geom_density() +
  labs(title="Funciones de densidad por barrio", x="Precio", y="Densidad") +
  theme_bw()
```

Calcula el tamaño medio, en metros cuadrados, para los 5 barrios anteriores y muestralo en el mismo dataframe junto con el precio y número de entradas

```{r}
tmn_barrio_m2 <- merge(barrio_100, aggregate(MetrosCuadrados~Barrio, barrios_interes, mean, na.rm=TRUE))
tmn_barrio_m2
```

Dibuja el diagrama de densidad de distribución de los diferentes tamaños de apartamentos. Serían 5 gráficas, una por cada barrio.

```{r}
ggplot(na.omit(barrios_interes), aes(x=MetrosCuadrados, color=Barrio)) +
  geom_density() +
  labs(title="Funciones de densidad por barrio", x="Tamaño", y="Densidad") +
  theme_bw()
```

Esta claro que las medias de metros cuadrados de cada uno de estos 5 barrios parecen ser diferentes, pero ¿son estadísticamente diferentes? ¿Que test habría que usar para comprobarlo?

```{r}
ggplot(data = na.omit(barrios_interes), aes(x=Barrio, y=MetrosCuadrados))+geom_boxplot()
```

```{r}

barrios_interes$Barrio <- as.factor(barrios_interes$Barrio)

for (i in levels(barrios_interes$Barrio)){
  print(paste("Barrio:",i,"p-value,",
              shapiro.test(na.omit(barrios_interes$MetrosCuadrados)[barrios_interes$Barrio==i])$p.value))
}

ktest <- kruskal.test(Precio~TipoAlquiler, data = airbnb)
ktest

# Las medias de los los barrios (al menos uno de ellos) parecen ser estadisticamente diferentes, ya que el p-valor es miy bajo. Hemos utilizado el test kruskal porque,por lo general, la distribución de los valores no es gaussiana.
```

Para únicamente los pisos de alquiler en el barrio de Sol:

`barrio_sol<-subset(airbnb_entire,Barrio=="Sol")`

Calcular un modelo lineal que combine alguna de estas variables: \* NumBanyos \* NumDormitorios \* MaxOcupantes \* MetrosCuadrados

Primero calculamos la correlación para ver como se relacionan estas variables entre sí.

```{r}
barrio_sol<-subset(airbnb_entire,Barrio=="Sol")
variables_sol <- c("NumBanyos", "NumDormitorios", "MaxOcupantes", "MetrosCuadrados")
corr_variables_sol <- cor(barrio_sol[variables_sol], use="pairwise.complete.obs")
corr_variables_sol
```

Se observa que la correlación entre el número de dormitorios y los metros cuadrados es sorprendentemente baja. ¿Son de fiar esos números?

Mediante un histograma o curvas de densidad podemos descartar números que notienen sentido en el dataframe barrio_sol, para tener una matriz de correlación que tenga mayor sentido.

```{r}
ggplot(barrio_sol, aes(x=NumBanyos)) + geom_density()
ggplot(barrio_sol, aes(x=NumDormitorios)) + geom_density()
ggplot(barrio_sol, aes(x=MaxOcupantes)) + geom_density()
ggplot(na.omit(barrio_sol), aes(x=MetrosCuadrados)) + geom_density()
barrio_sol <- subset(barrio_sol, MetrosCuadrados >= 10 & MetrosCuadrados <= 1000 & NumDormitorios >= 1 & NumDormitorios <= 5)

boxplot(barrio_sol$NumDormitorios, barrio_sol$MetrosCuadrados, col="skyblue", frame.plot=F)

cor(barrio_sol[variables_sol], use="pairwise.complete.obs")
```

Una vez que hayamos filtrado los datos correspondientes calcular el valor o la combinación de valores que mejor nos permite obtener el precio de un inmueble.

```{r}
library(GGally)
options(repr.plot.height=4,repr.plot.width=6)
ggpairs(na.omit(barrio_sol[,corr_variables_sol]),
       #lower = list(continuous = wrap("density", alpha = 0.8,size=0.2,color='blue'))
       lower = list(continuous = wrap("points", alpha = 0.3,size=0.1,color='blue'))
       )
```

¿Que variable es más fiable para conocer el precio de un inmueble, el número de habitaciones o los metros cuadrados?

Responde con su correspondiente margen de error del 95%, ¿cuantos euros incrementa el precio del alquiler por cada metro cuadrado extra del piso?

Responde con su correspondiente margen de error del 95%, ¿cuantos euros incrementa el precio del alquiler por cada habitación?

¿Cual es la probabilidad de encontrar, en el barrio de Sol, un apartamento en alquiler con 3 dormitorios? ¿Cual es el intervalo de confianza de esa probabilidad?
